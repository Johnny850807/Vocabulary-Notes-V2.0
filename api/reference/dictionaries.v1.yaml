openapi: 3.0.0
info:
  title: dictionaries
  version: '1.0'
  description: Public dictionary source api
  contact:
    name: johnny850807
    url: 'https://github.com/Johnny850807'
    email: johnny850807@gmail.com
servers:
  - url: 'http://localhost:8080'
    description: dictionaries
paths:
  '/api/public/dictionaries/{title}':
    parameters:
      - schema:
          type: string
        name: title
        in: path
        required: true
    get:
      summary: Get a dictionary by title
      operationId: get-api-public-dictionaries-title
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/dictionary.v1.yaml
    delete:
      summary: Delete a dictionary by title
      operationId: delete-api-public-dictionaries-title
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
  /api/public/dictionaries:
    post:
      summary: Create a dictionary
      operationId: post-api-public-dictionaries
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: ../models/dictionary.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/dictionary.v1.yaml
      description: ''
      security:
        - JWT Token: []
  '/api/public/wordgroups/{title}':
    get:
      summary: Get a word group by title
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/wordgroup.v1.yaml
      operationId: get-api-public-wordgroups
      requestBody: {}
    parameters:
      - schema:
          type: string
        name: title
        in: path
        required: true
    delete:
      summary: Delete a word group by title
      operationId: delete-api-public-wordgroups-title
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
    post:
      summary: ''
      operationId: post-api-public-wordgroups-title
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: ../models/wordgroup.v1.yaml
              examples: {}
      security:
        - JWT Token: []
  '/api/public/word/{name}':
    get:
      summary: Get a word by name
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/word.v1.yaml
      operationId: get-api-public-word
      description: ''
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    delete:
      summary: Delete a word by name
      operationId: delete-api-public-word-name
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
    patch:
      summary: Patch a word with new image url by name
      operationId: patch-api-public-word-name
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                description: "image's url"
      security:
        - JWT Token: []
  '/api/public/dictionaries/{dictionary_title}/wordgroups/{wordgroup_title}':
    parameters:
      - schema:
          type: string
        name: dictionary_title
        in: path
        required: true
        description: ''
      - schema:
          type: string
        name: wordgroup_title
        in: path
        required: true
    delete:
      summary: Delete a wordgroup into from a public dictionary
      operationId: delete-api-public-dictionaries-dictionary_title-wordgroups-wordgroup_title
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
    post:
      summary: Add a word group into a public dictionary
      operationId: post-api-public-dictionaries-dictionary_title-wordgroups-wordgroup_title
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
  '/api/public/word/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    put:
      summary: Update a word by id
      operationId: put-api-public-word-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/word.v1.yaml
        description: ''
      security:
        - JWT Token: []
  '/api/public/wordgroup/{wordgroup_title}/word/{name}':
    parameters:
      - schema:
          type: string
        name: wordgroup_title
        in: path
        required: true
      - schema:
          type: string
        name: name
        in: path
        required: true
    post:
      summary: Add a word into a word group
      operationId: post-api-public-wordgroup-wordgroup_title-word-name
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
    delete:
      summary: Delete a word from a word group
      operationId: delete-api-public-wordgroup-wordgroup_title-word-name
      responses:
        '200':
          description: OK
      security:
        - JWT Token: []
components:
  schemas: {}
  securitySchemes:
    JWT Token:
      type: http
      scheme: bearer
      description: |-
        Send a JWT token along the request to authenticate.

        401 error code is responded with an 'error' field embeded in the json response if the token is invalid.

        403 error code is responded if the requesting client is unauthorized to the request.
